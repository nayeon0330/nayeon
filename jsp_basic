jsp에 대하여...

웹에서 사용되는 자바 언어
=> 기본 자바 문법은 그대로 사용됨..

jsp : 전체가 HTML 형태로 구성되고, 자바문법은 내부
servlet : 웹 서버가 제공하는 라이브러리를 이용하는 자바 코드

자바 웹 프로젝트 구동시 실행되는 순서..
	1. Tomcat 서버 구동
	2. 웹 프로젝트가 서버 위에서 구동 시작
	2-1. 해당 웹 프로젝트 폴더 존재 확인
	2-2. 존재 : 웹 프로젝트 => WEB-INF => web.xml 읽기
	2-3. 오류가 없을 경우 요청한 페이지(html / jsp) 존재 여부 확인
	2-4. 존재
	       html : 해당 파일 내용을 요청한 웹 브라우저에게 전송 (응답 : response)
	       jsp    : jsp => java 변환 => class로 컴파일 => 초기화 => 내부 실행결과 데이터를 요청한 웹 브라우저에게 전송
	               맨 처음 요청이 이루어졌을 경우..
	               두번째 요청부터는 초기화 => 내부 실행결과 데이터를 요청한 웹 브라우저에게 전송
	               단, jsp 수정했을 경우엔
	                  jsp => java 변환 => class로 컴파일 => 초기화 => 내부 실행결과 데이터를 요청한 웹 브라우저에게 전송
	                  
====================================================
웹 프로그래밍란..
	1. 웹 어플리케이션을 구현하는 행위
	2. 웹 어플리케이션 : 웹을 기반으로 작동되는 프로그램
	3. 웹 : 1개 이상의 사이트가 연결되어 있는 인터넷 서비스의 한가지 형태
	4. 인터넷 : 1개 이상의 네트워크가 연결되어 있는 형태
	
프로토콜(Protocol) : 네트워트상에서 약속한 통신규약 (Http, FTP, SMTP, POP, DHCP)
IP : 네트워크상에서 컴퓨터를 식별할 수 있는 주소 (000.000.000.000)
localhost(127.0.0.1)
DNS : IP 주소를 인간이 쉽게 외우도록 맵핑한 문자열	
Port : IP 주소가 컴퓨터를 식별할 수 있게 해준다면 Port 번호는 해당 컴퓨터의 구동되고 있는 프로그램을 구분할 수 있는 번호
0 ~ 16255 : 0 ~ 1000 기본 운영체제에서 사용
====================================================
jsp 문서 작성
문법
	1. <%@ %> : 지시자 => 페이지에 대한 전반적인 설정 page / taglib / include
	2. <%-- --%> : jsp의 주석 (comment)
	3. <%! %> : 변수 / 메서드 선언
	4. <%= %> : 결과값을 웹 브라우저 화면에 바로 출력 => 변수의 값, 간단한 연산 결과값, 메서드 실행 결과값
	5. <% %> : 여러 줄에 걸쳐서 자바 코드를 실행할때
	6. 액션 태그 : jsp를 마치 html 태그 형태로 사용할 경우 <jsp:action명></jsp:action명>
	
	실행 과정
	최초 요청시 :  웹 브라우저 request => jsp => java => class => 실행 결과 => 웹 브라우저에게 response
	재요청시 : 웹 브라우저 request => jsp => 실행 결과 => 웹 브라우저에게 response
	
	내장 객체
	입출력 : request / response / out
	서블릿 객체 : page / config
	세션 객체 : session
	예외 객체 : exception
	
==================================================
내장 객체 : request 객체 (외부로부터 전달된 데이터를 저장)
getContextPath() : 웹 애플리케이션의 경로 (context path)	
getMethod() : <form action="" method="get/post>전송 방식 get, post로 구분
=> 웹 주소줄을 통해 ~~jsp?id=aaa&pw=3333 (get 전송방식)

getSession() : 서버의 임시 저장소(session) 객체를 추출할 경우
getProtocol() : 요청 프로토콜 구분
getRequestURL() : 요청 URL 추출
getQueryString() : 쿼리 문자열 추출
getServerName() : 서버 이름 추출
getServerPort() : 서버 포트번호 추출
getParameter() : 전송된 파라미터명을 이용하여 데이터 추출

주로 <input ~~ name="파라미터명" />
웹 주소줄에서 직접 전달 : http://localhost:~~/~~/~~~.jsp?파라미터명=값&파라미터명=값
	
JSP에서 요청시 전달된 파라미터 값을 추출 : 내장 객체 request.getParameter("파라미터명");	     

HTML 태그에서 입력된 모든 값은 문자열로 전달된다!!!

HTML => JSP : form 태그 사용 /  웹 주소줄 / <a href="">링크
	문자열로 전송!!!!
	
jsp <=> jsp : 객체를 전송 가능
jsp <=> Servlet : 객체를 전송 가능
=> request 객체(매개변수)에 객체(데이터)를 저장하여 전송               
